{"version":3,"sources":["assets/MediaPlayer.ts","assets/plugins/AutoPlay.ts","assets/plugins/AutoPause.js","assets/index.ts"],"names":["AutoPause","constructor","handleObserve","bind","threshold","run","player","observer","IntersectionObserver","observe","media","entries","entry","intersectionRatio","play","pause"],"mappings":";;;;;;AAAA,ACEA,IDFA,ACEA,QAAA,GDFA;AAAA,AEAA,ADEA;ADFA,AECA,ADCA,MCDMA,MFDN,ACEA,GCDA,CAAgB;AFGd,AEFAC,ADCA,ECDAA,SFEA,ACDA,ECDW,GAAE,GDCb,GDCA,ACDA,CDCY,ACDK,MDCjB,EAAkB;AAChB,AEFA,SFEK,AEFAC,KFEL,GAAa,KEFb,CFEmB,CAAC,CEFC,CFErB,IEF0BA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB,CADW,CAEX;AFEA,ACFF,EAAA,ODEO,CCFP,CAAA,KDEE,GAAe,CCFjB,CAAA,GAAA,CDEuB,CAAC,CCFxB,MDEiB,IAAkB,ACF/B,EDEF,ICFF,EAAuB;ADGrB,AGPJ,ADKI,ADAA,IELJ,KHOS,AEFAC,QCLT,CDKI,EFEA,AGPJ,CDKmB,IAAf,UCLJ,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AHQG,AEFA,ADAC,QAAI,CAAC,MAAM,CAAC,KAAP,CAAa,KAAlB,EAAyB;AEL7B,AFMM,IENN,EFMM,MAAM,CAAC,CENb,GAAA,CFMM,CAAa,KAAb,GAAqB,IAArB,CENN,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;AHSU,AEHRC,ADCG,EDEK,AEHRA,GAAG,CAACC,MAAD,CFGK,CAAA,AEHG,SFGH,CAAA,WAAA,GAAR,YAAA;AAAA,AGRF,ADMI,ICNJ,IHQE,CEFOA,IFEP,EEFE,CFEF,EGRF,ADMkBA,EFEhB,CGRF,GDMI,YCNJ,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;ADOI,ADAA,IAAA,MCAMC,ADAA,CAAC,IAAP,GCAc,GAAG,IAAIC,oBAAJ,CAAyB,KAAKN,aAA9B,EAA4C;AFE7D,AGNJ,ADKM,ADAH,GAND,CECI,KHMG,AGNE,GAAG,IHMV,CAAa,GGNK,CAAC,GHMnB,CAAqB,SGNX,CHMY,AGNW,MHMZ,CGNX,CHMkB,AGNhC;AHOM,AGNN,ADKME,ICLA,EHMA,AEDAA,GCLK,GHMC,AGNE,CHMD,EEDE,CFCT,CAAW,AEDD,GCLM,CAAC,CHMjB,AEDeA,aCLP,CAAwB,YAAxB,CAAd;AHOK,AGNL,ADEiE,ADEjE,IEJM,CHIF,AEFiB,CAAjB,ECFM,CFIV,EEJa,MFIb,EEJqB,CAAC,cAAT,CAAwB,YAAxB,CAAb;AHOG,AGLH,ADKIG,ADZJ,CAAA,EDQU,ACRV,CEOM,ADKFA,MCLQ,EDKA,CCLG,ADKFE,ICLM,GDKf,CAAiB,KAAKH,ICLP,CAAA,CDKE,CAAYI,KCLlB,ADKX,CCL2B;AAAE,ADM9B,ECN8B,EAAE,EAAE,KAAN;AHO7B,AGP0C,AFG5C,EDIE,AGP0C,KFG5C,CAAA,CEHmD,EAAE,CAAC,CHOpD,CAAA,CCJF,CEH0D,EFG3C,KDIb,CAAA,EGPwD,AFG1D,CEH0D,CHOxD,GAAA,GGPoD,EAAD,EAAiB,IAAI,CHOxE,aGPwE,CAAA,OAAJ,EAAjB;AHQjD,AGR2B,ADQ7BR,CCRa,CAAf,ADQEA,OFAO,KAAL,CAAW,AEAA,CAACS,GFAZ,IEAW,EAAS;AFCrB,AEAC,GFFF,OEEQC,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB;ACPJ,KAAK,CAAC,OAAN,GAAgB,YAAA;AHSd,AGRA,ADQE,EFAF,IGRI,EDQCC,GCRI,CAAC,CHQV,AEAU,CFAV,AEAWC,ICRX,EAAkB,GHQlB,CAAA,GGRyB,EHQzB,EEAK,CFAL,CGR+B,CAAC,CDQA,GCRP,EAAP,ADQmBT,IFArC,KEAE,EAA6C;AFC7C,AGRF,ADQI,ECRJ,MAAM,CHQC,AGRA,EDQEE,GFAP,AGRF,CHQa,EEAT,CAAYQ,EFAd,EEAE;AFCH,AGRF,ADQI,CCXL,EHSE,EEAE,MAEK;AACH,WAAKR,MAAL,CAAYS,KAAZ;AFCJ,AGTF,ADSK,EFAH,EGTE,CAAC,OAAL,CHSE,CAAA,CGTa,QHSb,CAAA,GGTa,CHSb,GAAA,YAAA;AACE,AGTF,ADUC,MCVG,GHSG,EGTE,CAAC,EHSR,CAAW,EGTb,EAAiB,CHSf,GAAmB,GGTG,CHStB,KGT4B,CAAC,MAAP,EAAP;AHUhB,AGTD,EAAA,CHOA,KGPM,CAAC,IAAP;AACD,ADjBe,CCchB;AHaE,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,AGTJ,IAAG,KHSM,KAAL,CAAW,AEAAf,KFAX,GAAmB,AGTD,KHSlB,IGTJ,EAAgC;AHU7B,AGTD,EAAA,CHOA,QGPS,CAAC,aAAV,CAAwB,QAAxB,CAAiC,sCAAjC,EACC,KADD,CACO,UAAA,KAAA,EAAK;AACV,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,OAAlB;AHQJ,AGPG,GAHD,MHUF,WAAA;AA/BA,AGyBC,CHzBD,EAAA;;AAiCA,OAAA,CAAA,OAAA,GAAe,WAAf","file":"assets.71ddc51b.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\r\n  media:HTMLMediaElement;\r\n  plugins:Array<any>;\r\n\r\n  constructor(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n    this.initPlugins();\r\n  }\r\n\r\n  private initPlugins() {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.run(this);\r\n    });\r\n  }\r\n\r\n  play() {\r\n    this.media.play();\r\n  }\r\n\r\n  pause() {\r\n    this.media.pause();\r\n  }\r\n\r\n  mute() {\r\n    this.media.muted = true;\r\n  }\r\n\r\n  unmute() {\r\n    this.media.muted = false;\r\n  }\r\n}\r\n\r\nexport default MediaPlayer;\r\n","import MediaPlayer from \"../MediaPlayer\";\r\n\r\nclass AutoPlay {\r\n  constructor() { }\r\n  run(player: MediaPlayer) {\r\n    //llamando getter y setter\r\n    if (!player.media.muted) {\r\n      player.media.muted = true;\r\n    }\r\n    player.play();\r\n  }\r\n}\r\nexport default AutoPlay;\r\n","//intersection observer, herramienta del DOM\r\nclass AutoPause {\r\n  constructor(){\r\n    this.handleObserve = this.handleObserve.bind(this)\r\n    //umbral de viewport del video\r\n    this.threshold=0.25\r\n  }\r\n  run(player){\r\n    this.player = player\r\n    const observer = new IntersectionObserver(this.handleObserve,{\r\n      //umbral de viewport del video\r\n      threshold:this.threshold\r\n    })\r\n\r\n    observer.observe(this.player.media)\r\n  }\r\n\r\n  handleObserve(entries){\r\n    const entry = entries[0]\r\n\r\n    if(entry.intersectionRatio >= this.threshold){\r\n      this.player.play()\r\n    }else{\r\n      this.player.pause()\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default AutoPause","import MediaPlayer from \"./MediaPlayer\";\r\nimport AutoPlay from \"./plugins/AutoPlay\";\r\nimport AutoPause from \"./plugins/AutoPause.js\";\r\n\r\n\r\nconst video = document.querySelector(\"video\");\r\nconst boton = document.getElementById(\"playButton\");\r\nconst mute = document.getElementById(\"MuteButton\");\r\n\r\nconst player = new MediaPlayer({ el: video, plugins: [new AutoPlay(), new AutoPause()] });\r\n\r\nboton.onclick = () => {\r\n  if (video.paused) return player.play();\r\n  player.pause();\r\n};\r\nmute.onclick = () => {\r\n  if (video.muted) return player.unmute();\r\n  player.mute();\r\n};\r\n\r\nif('serviceWorker' in navigator){\r\n  navigator.serviceWorker.register('/sw.js')\r\n  .catch(error =>{\r\n    console.log(error.message)\r\n  })\r\n}"]}